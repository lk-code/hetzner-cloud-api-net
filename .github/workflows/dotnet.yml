name: .NET Build

on:
  
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
          
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Version Visual Studio SDK projects
      uses: roryprimrose/set-vs-sdk-project-version@v1.0.3
      with:
        # The wildcard filter that identifies projects to version
        projectFilter: "**/hcloud-net.csproj"
        # Maps to the Version element
        version: 2.0.${{ github.run_number }}
        # Maps to the AssemblyVersion element
        assemblyVersion: 2.0.${{ github.run_number }}
        # Maps to the FileVersion element
        fileVersion: 2.0.${{ github.run_number }}
        # Maps to the InformationalVersion element
        informationalVersion: 2.0.${{ github.run_number }}
        
    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~\sonar\cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
        
    - name: Cache SonarCloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v1
      with:
        path: .\.sonar\scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner
        
    - name: Install SonarCloud scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      shell: pwsh
      run: |
        New-Item -Path ./.sonar/scanner -ItemType Directory
        dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner
      
    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      shell: pwsh
      run: |
        .\.sonar\scanner\dotnet-sonarscanner begin /k:"lk-code_hetzner-cloud-api-net" /o:"lk-code-github" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
        dotnet build --configuration Release --no-restore -p:PackageVersion=2.0.${{ github.run_number }}
        .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
      
    - name: Publish
      run: dotnet nuget push **/*hetznercloudapi*.nupkg --no-symbols --skip-duplicate --api-key ${{secrets.NUGET_API_KEY}} --source "nuget.org"
